syntax = "proto3";
package provenance.reward.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "provenance/epoch/v1/genesis.proto";

option go_package          = "github.com/provenance-io/provenance/x/reward/types";
option java_package        = "io.provenance.reward.v1";
option java_multiple_files = true;

// Params holds parameters for the reward module
message Params {
    // distribution epoch identifier
    string distr_epoch_identifier = 1
        [ (gogoproto.moretags) = "yaml:\"distr_epoch_identifier\"" ];
  }

message Criteria  {
  uint64 id = 1;         
  string distribute_to = 2;
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ]; 
  // distribution start time
  int64 start_height = 4; 
  int64 end_height = 5;   // number of epochs distributed already
  repeated cosmos.base.v1beta1.Coin distributed_coins = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ]; 
}

// A Reward is the metadata of reward data per address
message Reward {
    // address of user reward
    string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
  
    // total initial reward amount for the user
    repeated cosmos.base.v1beta1.Coin initial_reward_amount = 2 [
      (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
      (gogoproto.nullable) = false,
      (gogoproto.moretags) = "yaml:\"initial_reward_amount\""
    ];
  
    // true if action is completed
    // index of bool in array refers to action enum #
    repeated bool action_completed = 3
        [ (gogoproto.moretags) = "yaml:\"action_completed\"" ];
  }