syntax = "proto3";
package provenance.reward.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "provenance/epoch/v1/genesis.proto";

option go_package          = "github.com/provenance-io/provenance/x/reward/types";
option java_package        = "io.provenance.reward.v1";
option java_multiple_files = true;

// Params holds parameters for the reward module
message Params {
  // distribution epoch identifier
  string distr_epoch_identifier = 1 [(gogoproto.moretags) = "yaml:\"distr_epoch_identifier\""];
}

message RewardProgram {
  uint64                   id                   = 1;
  string                   distribute_from      = 2;
  cosmos.base.v1beta1.Coin coin                 = 3;
  string                   epoch_id             = 4;
  int64                    start_epoch          = 5;
  int64                    number_epochs        = 6;
  int64                    eligibility_criteria = 7;
}

message EpochRewardDistribution {
  string                   id                = 1;
  int64                    reward_program_id = 2;
  cosmos.base.v1beta1.Coin liquidity_pool    = 3;
}

// // A Reward is the metadata of reward data per address
// message RewardClaim {
//   // address of user reward
//   string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

//   // reward per-epoch map---move to message, epoch id, amount, dist or not
//   cosmos.base.v1beta1.Coin reward_amount = 2 [
//     (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
//     (gogoproto.nullable)     = false,
//     (gogoproto.moretags)     = "yaml:\"reward_amount\""
//   ];

//   //shares per epoch
//   // num_shares,
//   // reward_program_id
// }

message ActionDelegate {
  int64 minimum = 1;
  int64 maximum = 2;
}

message ActionTransfer {
  int64 minimum = 1;
  int64 maximum = 2;
}

message EligibilityCriteria {
  string name = 1;
  oneof  action_type {
    ActionTransfer action_transfer = 2;
    ActionDelegate action_delegate = 3;
  }
}