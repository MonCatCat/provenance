name: Buf Push
# Protobuf runs buf (https://buf.build/) push updated proto files to https://buf.build/provenance-io
# This workflow is only run when a .proto file has been changed or when this workflow has been modifed.
on:
  push:
    branches:
      - main
    paths:
      - "**/**.proto"
      - ".github/workflows/proto-registry.yml"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"     # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

# Concurrency is not defined in here because this job usually doesn't run
# long enough to need cancelling, and it's okay for it to run multiple times.

# Provenance publishes Protobuf content (including third_party dependencies) to buf.build.
# Because of third_party dependencies declared in buf.yml, a buf.lock will be generated
# containing the dependency manifest. Among other things, the buf.lock contains the
# latest commit hash of the third_party library in the buf.build Provenance repository.
# When new files are added to the third_party library we need:
#   1. publish the third_party library
#   2. update buf.lock to point to the new commit hash
#   3. sign and create a PR to commit buf.lock changes back to main
# This helps avoid breaking changes when we cut new releases.
jobs:
  push_third_party:
#    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Buf setup action
        uses: bufbuild/buf-setup-action@v1.13.1
      - name: Buf push 'third_party/proto'
        uses: bufbuild/buf-push-action@v1
        with:
          input: 'third_party/proto'
          buf_token: ${{ secrets.BUF_TOKEN }}
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Update buf.lock
        run: |
          cd third_party/proto
          buf mod update
          cd ../..
          git add .
          git commit -S -m "Update buf.lock to latest commit hash"
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4.2.3
        with:
          base: main
          branch: create-pull-request/patch-buf-lock
          delete-branch: true
          # GitHub Personal Access Token (from the same account where the GPG key is stored)
          token: ${{ secrets.CPR_PAT }}
          committer: ${{ steps.import_gpg.outputs.email }}
          signoff: true
          title: 'Update buf.lock'
          body: |
            Updates `third_party/proto/buf.lock` with latest commit hash.
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  push_proto:
    if: github_ref_type == 'tag'
    runs-on: ubuntu-latest
    name: Protobuf Push
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Buf setup action
        uses: bufbuild/buf-setup-action@v1.13.1
      - name: Buf push 'proto/'
        uses: bufbuild/buf-push-action@v1
        with:
          input: 'proto'
          buf_token: ${{ secrets.BUF_TOKEN }}
